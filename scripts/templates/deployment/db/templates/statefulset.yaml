apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "db-deploy.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "db-deploy.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "db-deploy.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "db-deploy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "db-deploy.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "db-deploy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 60
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: {{ .Values.service.port }}
          name: cql
        resources:
          limits:
            cpu: "500m"
            memory: 1Gi
          requests:
            cpu: "500m"
            memory: 1Gi
        env:
          {{- range .Values.env }}
          - name: {{ .name | quote }}
            value: {{ .value | quote }}
          {{- end }}
          - name: CASSANDRA_CLUSTER_NAME
            value: {{ .Chart.Name }}
          - name: MAX_HEAP_SIZE
            value: 512M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        readinessProbe:
          exec:
              command:
                - /bin/bash
                - -c
                - |
                  if [[ $(nodetool status | grep $POD_IP) == *"UN"* ]]; then
                    cqlsh -e "CREATE KEYSPACE IF NOT EXISTS {{ .Values.keyspace }} WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 2}"
                    echo "Keyspace {{ .Values.keyspace }} created."
                    exit 0
                  else:
                    echo "Node is not ready yet."
                    exit 1
                  fi
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 240
        volumeMounts:
        - name: cassandra-data
          mountPath: /cassandra_data
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: cassandra-storage
      resources:
        requests:
          storage: 1Gi